import React, {useState} from 'react';
import classes from "./InputField.module.css";
import * as events from "events";

const InputField = ({text, setText, placeholder="", type}) => {
    const isPassword = type === "password"
    const [fieldType, setFieldType] = useState(type)

    return (

        <div className={classes.parent}>
            <input
                className={classes.inputField}
                type={fieldType}
                placeholder={placeholder}
                value={text}
                onChange={(event) => setText(event.target.value)}
            />
            {isPassword ?
                (
                        <svg onClick={
                            () => {
                                if (fieldType === "password") {
                                    setFieldType("text")
                                } else {
                                    setFieldType("password")
                                }
                            }
                        } className={classes.eye} width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                            {fieldType === 'password' ?
                            <path d="M16.4826 11.3906C16.538 11.4868 16.5739 11.593 16.5883 11.7031C16.6027 11.8132 16.5952 11.925 16.5663 12.0322C16.5375 12.1394 16.4878 12.2399 16.4201 12.3279C16.3524 12.4159 16.2681 12.4897 16.1718 12.5451C16.0756 12.6005 15.9694 12.6364 15.8593 12.6508C15.7493 12.6652 15.6374 12.6577 15.5302 12.6289C15.423 12.6 15.3225 12.5503 15.2345 12.4826C15.1465 12.4149 15.0727 12.3306 15.0173 12.2344L13.8318 10.1601C13.1703 10.5763 12.4572 10.9039 11.7105 11.1347L12.0825 13.3594C12.119 13.58 12.0665 13.8062 11.9364 13.9882C11.8062 14.1701 11.6092 14.293 11.3885 14.3297C11.3421 14.3378 11.295 14.3418 11.2479 14.3416C11.0486 14.3414 10.8559 14.2707 10.7037 14.142C10.5516 14.0133 10.45 13.835 10.4168 13.6385L10.0547 11.4729C9.35227 11.5507 8.64344 11.5507 7.94106 11.4729L7.58246 13.6406C7.54921 13.8373 7.44735 14.0159 7.29494 14.1446C7.14254 14.2733 6.94945 14.3439 6.74996 14.3437C6.70283 14.344 6.65576 14.34 6.60934 14.3318C6.50005 14.3134 6.39546 14.2736 6.30154 14.2148C6.20762 14.1559 6.12621 14.0792 6.06196 13.9889C5.99771 13.8986 5.95188 13.7965 5.92709 13.6885C5.90229 13.5805 5.89902 13.4686 5.91746 13.3594L6.28942 11.129C5.54276 10.8983 4.82958 10.5706 4.16809 10.1545L2.98262 12.2344C2.92722 12.3306 2.85341 12.4149 2.7654 12.4826C2.6774 12.5503 2.57693 12.6 2.46972 12.6289C2.36251 12.6577 2.25067 12.6652 2.14058 12.6508C2.03049 12.6364 1.9243 12.6005 1.82809 12.5451C1.73187 12.4897 1.64751 12.4159 1.57983 12.3279C1.51214 12.2399 1.46244 12.1394 1.43359 12.0322C1.40473 11.925 1.39727 11.8132 1.41163 11.7031C1.426 11.593 1.46191 11.4868 1.51731 11.3906L2.81246 9.13006C2.37349 8.73363 1.96652 8.30315 1.59535 7.84263C1.46432 7.66787 1.40617 7.4491 1.43313 7.23234C1.46009 7.01558 1.57006 6.81772 1.73992 6.68038C1.90977 6.54304 2.12627 6.47692 2.34387 6.49593C2.56147 6.51495 2.76322 6.61761 2.90668 6.78232C4.03449 8.17873 6.00746 9.84373 8.99996 9.84373C11.9925 9.84373 13.9654 8.17873 15.0932 6.78232C15.2344 6.6099 15.438 6.50031 15.6596 6.47747C15.8813 6.45463 16.103 6.52039 16.2763 6.66039C16.4496 6.8004 16.5606 7.00329 16.5849 7.22478C16.6092 7.44627 16.5448 7.66838 16.406 7.84263C16.0344 8.30321 15.6269 8.73369 15.1875 9.13006L16.4826 11.3906Z" fill="#7A7A7A"/>
                            :
                            <path d="M17.6484 8.65758C17.6224 8.60063 17.0065 7.23305 15.6459 5.8725C13.8255 4.05492 11.5312 3.09375 8.99997 3.09375C6.46872 3.09375 4.17442 4.05492 2.35614 5.8725C0.995596 7.23305 0.379658 8.60063 0.351533 8.65758C0.303899 8.76558 0.279297 8.88232 0.279297 9.00035C0.279297 9.11839 0.303899 9.23513 0.351533 9.34313C0.377549 9.40078 0.993487 10.7677 2.35474 12.1282C4.17442 13.9458 6.46872 14.9063 8.99997 14.9063C11.5312 14.9063 13.8255 13.9458 15.6431 12.1282C17.0043 10.7677 17.6203 9.40078 17.6463 9.34313C17.6943 9.23528 17.7192 9.11861 17.7196 9.00057C17.72 8.88254 17.6957 8.76572 17.6484 8.65758ZM14.4098 10.9779C12.9002 12.4643 11.0805 13.2188 8.99997 13.2188C6.91942 13.2188 5.09974 12.4643 3.59224 10.9772C2.99904 10.3902 2.48878 9.72503 2.0756 9C2.4889 8.27526 2.99915 7.6103 3.59224 7.02352C5.10044 5.5357 6.91942 4.78125 8.99997 4.78125C11.0805 4.78125 12.8995 5.5357 14.4077 7.02352C15.0009 7.61025 15.5111 8.27522 15.9243 9C15.5111 9.72499 15.0008 10.3902 14.4077 10.9772L14.4098 10.9779ZM8.99997 5.90625C8.38809 5.90625 7.78994 6.0877 7.28118 6.42764C6.77241 6.76759 6.37588 7.25076 6.14172 7.81607C5.90756 8.38138 5.84629 9.00343 5.96567 9.60356C6.08504 10.2037 6.37969 10.7549 6.81236 11.1876C7.24503 11.6203 7.79628 11.9149 8.39641 12.0343C8.99654 12.1537 9.61859 12.0924 10.1839 11.8583C10.7492 11.6241 11.2324 11.2276 11.5723 10.7188C11.9123 10.21 12.0937 9.61189 12.0937 9C12.0928 8.17977 11.7665 7.39341 11.1866 6.81342C10.6066 6.23343 9.8202 5.90718 8.99997 5.90625ZM8.99997 10.4063C8.72184 10.4063 8.44996 10.3238 8.2187 10.1693C7.98744 10.0147 7.8072 9.79511 7.70077 9.53815C7.59433 9.28119 7.56648 8.99844 7.62074 8.72565C7.675 8.45287 7.80894 8.2023 8.0056 8.00563C8.20227 7.80896 8.45284 7.67503 8.72563 7.62077C8.99841 7.56651 9.28116 7.59436 9.53812 7.70079C9.79508 7.80723 10.0147 7.98747 10.1692 8.21873C10.3237 8.44999 10.4062 8.72187 10.4062 9C10.4062 9.37296 10.2581 9.73065 9.99434 9.99437C9.73062 10.2581 9.37293 10.4063 8.99997 10.4063Z" fill="#7A7A7A"/>}
                        </svg>
                )
            :""}
        </div>
    );
};

export default InputField;